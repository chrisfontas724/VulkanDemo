#version 450
precision highp float;
#extension GL_GOOGLE_include_directive : enable
#extension GL_ARB_separate_shader_objects : enable

#include "mwc64x.comp"

#define WORKGROUP_SIZE 16

layout (local_size_x = WORKGROUP_SIZE, local_size_y = 1, local_size_z = 1 ) in;

// Use std430 layout for tight packing.
layout(set = 0, binding = 0) buffer buf {
    mwc64x_state_t states[];
};


layout(push_constant) uniform PushBlock {
    layout(offset=0)  uint64_t offset;
};



float uniformRandomVariable(inout mwc64x_state_t state) {
    uint randMax = 0xFFFFFFFF;
    uint randomInt = MWC64X_NextUint(state);
    return float(randomInt) / float(randMax);
}

void main() {
    uint index = gl_GlobalInvocationID.x;
    mwc64x_state_t state = states[index];
    MWC64X_SeedStreams(state, offset + gl_GlobalInvocationID.x, gl_LocalInvocationID.x);
    states[index] = state;
}